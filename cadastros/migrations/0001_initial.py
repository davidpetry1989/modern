# Generated by Django 4.2.23 on 2025-08-11 02:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Parceiro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("razao_social", models.CharField(max_length=200)),
                ("nome_fantasia", models.CharField(blank=True, max_length=200)),
                (
                    "cnpj",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{14}$", "CNPJ deve conter 14 dígitos"
                            )
                        ],
                    ),
                ),
                ("ie", models.CharField(blank=True, max_length=30)),
                ("im", models.CharField(blank=True, max_length=30)),
                ("endereco", models.CharField(max_length=200)),
                ("numero", models.CharField(max_length=20)),
                ("complemento", models.CharField(blank=True, max_length=100)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("AC", "AC"),
                            ("AL", "AL"),
                            ("AP", "AP"),
                            ("AM", "AM"),
                            ("BA", "BA"),
                            ("CE", "CE"),
                            ("DF", "DF"),
                            ("ES", "ES"),
                            ("GO", "GO"),
                            ("MA", "MA"),
                            ("MT", "MT"),
                            ("MS", "MS"),
                            ("MG", "MG"),
                            ("PA", "PA"),
                            ("PB", "PB"),
                            ("PR", "PR"),
                            ("PE", "PE"),
                            ("PI", "PI"),
                            ("RJ", "RJ"),
                            ("RN", "RN"),
                            ("RS", "RS"),
                            ("RO", "RO"),
                            ("RR", "RR"),
                            ("SC", "SC"),
                            ("SP", "SP"),
                            ("SE", "SE"),
                            ("TO", "TO"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "cep",
                    models.CharField(
                        max_length=8,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{8}$", "CEP deve conter 8 dígitos"
                            )
                        ],
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "Telefone inválido"
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("site", models.URLField(blank=True)),
                ("ativo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_cliente", models.BooleanField(default=False)),
                ("is_fornecedor", models.BooleanField(default=False)),
                ("is_transportadora", models.BooleanField(default=False)),
                ("is_contador", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["razao_social"],
                "abstract": False,
                "indexes": [
                    models.Index(fields=["cnpj"], name="cadastros_p_cnpj_30caba_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Empresa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("razao_social", models.CharField(max_length=200)),
                ("nome_fantasia", models.CharField(blank=True, max_length=200)),
                (
                    "cnpj",
                    models.CharField(
                        max_length=14,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{14}$", "CNPJ deve conter 14 dígitos"
                            )
                        ],
                    ),
                ),
                ("ie", models.CharField(blank=True, max_length=30)),
                ("im", models.CharField(blank=True, max_length=30)),
                ("endereco", models.CharField(max_length=200)),
                ("numero", models.CharField(max_length=20)),
                ("complemento", models.CharField(blank=True, max_length=100)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("AC", "AC"),
                            ("AL", "AL"),
                            ("AP", "AP"),
                            ("AM", "AM"),
                            ("BA", "BA"),
                            ("CE", "CE"),
                            ("DF", "DF"),
                            ("ES", "ES"),
                            ("GO", "GO"),
                            ("MA", "MA"),
                            ("MT", "MT"),
                            ("MS", "MS"),
                            ("MG", "MG"),
                            ("PA", "PA"),
                            ("PB", "PB"),
                            ("PR", "PR"),
                            ("PE", "PE"),
                            ("PI", "PI"),
                            ("RJ", "RJ"),
                            ("RN", "RN"),
                            ("RS", "RS"),
                            ("RO", "RO"),
                            ("RR", "RR"),
                            ("SC", "SC"),
                            ("SP", "SP"),
                            ("SE", "SE"),
                            ("TO", "TO"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "cep",
                    models.CharField(
                        max_length=8,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{8}$", "CEP deve conter 8 dígitos"
                            )
                        ],
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "Telefone inválido"
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("site", models.URLField(blank=True)),
                ("ativo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["razao_social"],
                "abstract": False,
                "indexes": [
                    models.Index(fields=["cnpj"], name="cadastros_e_cnpj_2a344d_idx")
                ],
            },
        ),
    ]
